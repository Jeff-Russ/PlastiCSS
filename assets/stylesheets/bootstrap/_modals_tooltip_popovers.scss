// _modals.scss _tooltip.scss and _popovers.scss in one file

@if $modals == true {
  /* BEGIN modals ========================================================
  */

  // .modal-open      - body class for killing the scroll
  // .modal           - container to scroll within
  // .modal-dialog    - positioning shell for the actual modal
  // .modal-content   - actual modal w/ bg and corners and shit
  
  %modal-open { overflow: hidden; } // Kill the scroll on the body
  
  %modal { // Container that the modal scrolls within
    display: none; overflow: hidden;  position: fixed;
    top: 0; right: 0; bottom: 0; left: 0; z-index: $zindex-modal;
    -webkit-overflow-scrolling: touch;
  
    // Prevent Chrome on Windows from adding a focus outline. For details, see
    // https://github.com/twbs/bootstrap/pull/10951.
    outline: 0;
  
    &.fade %modal-dialog { // When fading in the modal, animate it to slide down
      @include translate(0, -25%); @include transition-transform(0.3s ease-out);}
    &.in %modal-dialog { @include translate(0, 0) }
  }
  %modal-open %modal { overflow-x: hidden; overflow-y: auto; }
  
  // Shell div to position the modal with bottom padding
  %modal-dialog { position: relative; width: auto; margin: 10px; }
  
  %modal-content { // Actual modal
    position: relative; background-color: $modal-content-bg;
    border: 1px solid $modal-content-fallback-border-color; //old browsers fallback (ie8 etc)
    border: 1px solid $modal-content-border-color; 
    border-radius: $border-radius-large;@include box-shadow(0 3px 9px rgba(0,0,0,.5));
    background-clip: padding-box;
    // Remove focus outline from opened modal
    outline: 0;
  }
  %modal-backdrop { // Modal background
    position: fixed; top: 0; right: 0; bottom: 0; left: 0;
    z-index: $zindex-modal-background; background-color: $modal-backdrop-bg;
    &.fade { @include opacity(0); } // Fade for backdrop
    &.in { @include opacity($modal-backdrop-opacity); }
  }
  
  %modal-header { // Top section of the modal w/ title and dismiss
    padding: $modal-title-padding; border-bottom: 1px solid $modal-header-border-color;
    @include clearfix;
  }
  %modal-header %close { margin-top: -2px; } // Close icon
  %modal-title { margin: 0; line-height: $modal-title-line-height; } // Title text within header
  
  // Where all modal content resides (sibling of .modal-header and .modal-footer)
  %modal-body { position: relative; padding: $modal-inner-padding; }
  
  %modal-footer { // Footer (for actions)
    padding: $modal-inner-padding; text-align: right; // right align buttons
    border-top: 1px solid $modal-footer-border-color;
    @include clearfix; // clear it in case folks use .pull-* classes on buttons
  
    %btn + %btn {  // Properly space out buttons
      margin-left: 5px;
      margin-bottom: 0; // account for input[type="submit"] which gets the bottom margin like all other inputs
    }
    %btn-group %btn + %btn  { margin-left: -1px; } // but override that for button groups
    %btn-block + %btn-block { margin-left: 0;}   // and override it for block buttons as well
  }
  
  // Measure scrollbar width for padding body during modal show/hide
  %modal-scrollbar-measure {  position: absolute; top: -9999px; width: 50px; height: 50px; overflow: scroll; }
  
  // Scale up the modal
  @media (min-width: $screen-sm-min) {
    %modal-dialog { width: $modal-md; margin: 30px auto; }  // Automatically set modal's width for larger viewports
    %modal-content { @include box-shadow(0 5px 15px rgba(0,0,0,.5));}
    %modal-sm { width: $modal-sm; } // Modal sizes
  }
  @media (min-width: $screen-md-min) { %modal-lg { width: $modal-lg; } }

  /* END modals ========================================================
  */
}
@mixin make_modal_classes ($classes...) {
	@if nth($classes, 1) != false {
		@if nth($classes, 1) == all or nth($classes, 1) == true {
			$classes: modal modal-sm modal-lg modal-open modal-dialog modal-header modal-title 
        modal-body modal-content modal-footer modal-backdrop modal-scrollbar-measure;
		}
		@each $class in $classes {
			.#{$class} { @extend%#{$class};}
		}
	}
} 


@if $tooltip == true {
  /* BEGIN tooltip ========================================================
  */
  // Base class
  .tooltip {
    position: absolute; z-index: $zindex-tooltip; display: block;
    // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
    // So reset our font and text properties to avoid inheriting weird values.
    @include reset-text; font-size: $font-size-small; @include opacity(0);
    &.in     { @include opacity($tooltip-opacity); }
    &.top    { margin-top:  -3px; padding: $tooltip-arrow-width 0; }
    &.right  { margin-left:  3px; padding: 0 $tooltip-arrow-width; }
    &.bottom { margin-top:   3px; padding: $tooltip-arrow-width 0; }
    &.left   { margin-left: -3px; padding: 0 $tooltip-arrow-width; }
  }
  
  // Wrapper for the tooltip content
  .tooltip-inner {
    max-width: $tooltip-max-width; padding: 3px 8px; color: $tooltip-color; text-align: center;
    background-color: $tooltip-bg; border-radius: $border-radius-base;
  }
  // Arrows
  .tooltip-arrow { position: absolute; width: 0; height: 0; border-color: transparent; border-style: solid; }
  // Note: Deprecated .top-left, .top-right, .bottom-left, and .bottom-right as of v3.3.1
  .tooltip {
    &.top .tooltip-arrow {
      bottom: 0; left: 50%; margin-left: -$tooltip-arrow-width;
      border-width: $tooltip-arrow-width $tooltip-arrow-width 0;
      border-top-color: $tooltip-arrow-color; }
    &.top-left .tooltip-arrow {
      bottom: 0; right: $tooltip-arrow-width; margin-bottom: -$tooltip-arrow-width;
      border-width: $tooltip-arrow-width $tooltip-arrow-width 0;
      border-top-color: $tooltip-arrow-color; }
    &.top-right .tooltip-arrow {
      bottom: 0; left: $tooltip-arrow-width; margin-bottom: -$tooltip-arrow-width;
      border-width: $tooltip-arrow-width $tooltip-arrow-width 0;
      border-top-color: $tooltip-arrow-color; }
    &.right .tooltip-arrow {
      top: 50%; left: 0; margin-top: -$tooltip-arrow-width;
      border-width: $tooltip-arrow-width $tooltip-arrow-width $tooltip-arrow-width 0;
      border-right-color: $tooltip-arrow-color; }
    &.left .tooltip-arrow {
      top: 50%; right: 0; margin-top: -$tooltip-arrow-width;
      border-width: $tooltip-arrow-width 0 $tooltip-arrow-width $tooltip-arrow-width;
      border-left-color: $tooltip-arrow-color; }
    &.bottom .tooltip-arrow {
      top: 0; left: 50%; margin-left: -$tooltip-arrow-width;
      border-width: 0 $tooltip-arrow-width $tooltip-arrow-width;
      border-bottom-color: $tooltip-arrow-color; }
    &.bottom-left .tooltip-arrow {
      top: 0; right: $tooltip-arrow-width; margin-top: -$tooltip-arrow-width;
      border-width: 0 $tooltip-arrow-width $tooltip-arrow-width;
      border-bottom-color: $tooltip-arrow-color; }
    &.bottom-right .tooltip-arrow {
      top: 0; left: $tooltip-arrow-width; margin-top: -$tooltip-arrow-width;
      border-width: 0 $tooltip-arrow-width $tooltip-arrow-width;
      border-bottom-color: $tooltip-arrow-color; }
  }
  /* END tooltip ========================================================
  */
}

@if $popovers == true {
  /* BEGIN popovers ========================================================
  */
  .popover {
    position: absolute; top: 0; left: 0; z-index: $zindex-popover; display: none;
    max-width: $popover-max-width; padding: 1px;
    // Our parent element can be arbitrary since popovers are by default inserted as a sibling of their target element.
    // So reset our font and text properties to avoid inheriting weird values.
    @include reset-text; font-size: $font-size-base; background-color: $popover-bg;
    background-clip: padding-box; border: 1px solid $popover-fallback-border-color;
    border: 1px solid $popover-border-color; border-radius: $border-radius-large;
    @include box-shadow(0 5px 10px rgba(0,0,0,.2));
  
    // Offset the popover to account for the popover arrow
    &.top     { margin-top: -$popover-arrow-width; }
    &.right   { margin-left: $popover-arrow-width; }
    &.bottom  { margin-top:   $popover-arrow-width; }
    &.left    { margin-left: -$popover-arrow-width; }
  }
  
  .popover-title {
    margin: 0; // reset heading margin
    padding: 8px 14px; font-size: $font-size-base; background-color: $popover-title-bg;
    border-bottom: 1px solid darken($popover-title-bg, 5%);
    border-radius: ($border-radius-large - 1) ($border-radius-large - 1) 0 0;
  }
  
  .popover-content {padding: 9px 14px; }
  
  // Arrows
  // .arrow is outer, .arrow:after is inner
  
  .popover > .arrow {
    &, &:after {
      position: absolute; display: block; width: 0; height: 0; border-color: transparent; border-style: solid; }
  }
  .popover > .arrow { border-width: $popover-arrow-outer-width; }
  .popover > .arrow:after { border-width: $popover-arrow-width; content: ""; }
  
  .popover {
    &.top > %arrow {
      left: 50%; margin-left: -$popover-arrow-outer-width; border-bottom-width: 0;
      border-top-color: $popover-arrow-outer-fallback-color; // IE8 fallback
      border-top-color: $popover-arrow-outer-color; bottom: -$popover-arrow-outer-width;
      &:after { content: " "; bottom: 1px; margin-left: -$popover-arrow-width;
        border-bottom-width: 0; border-top-color: $popover-arrow-color; } }
    &.right > %arrow {
      top: 50%; left: -$popover-arrow-outer-width; margin-top: -$popover-arrow-outer-width;
      border-left-width: 0; border-right-color: $popover-arrow-outer-fallback-color; // IE8 fallback
      border-right-color: $popover-arrow-outer-color;
      &:after { content: " "; left: 1px; bottom: -$popover-arrow-width;
        border-left-width: 0; border-right-color: $popover-arrow-color; } }
    &.bottom > %arrow {
      left: 50%; margin-left: -$popover-arrow-outer-width; border-top-width: 0; 
      border-bottom-color: $popover-arrow-outer-fallback-color; // IE8 fallback
      border-bottom-color: $popover-arrow-outer-color; top: -$popover-arrow-outer-width;
      &:after { content: " "; top: 1px; margin-left: -$popover-arrow-width;
        border-top-width: 0;border-bottom-color: $popover-arrow-color; } }
    &.left > %arrow { top: 50%; right: -$popover-arrow-outer-width;
      margin-top: -$popover-arrow-outer-width; border-right-width: 0;
      border-left-color: $popover-arrow-outer-fallback-color; // IE8 fallback
      border-left-color: $popover-arrow-outer-color;
      &:after { content: " "; right: 1px; border-right-width: 0;
        border-left-color: $popover-arrow-color; bottom: -$popover-arrow-width; } }
  }
  /* END popovers ========================================================
  */
}
